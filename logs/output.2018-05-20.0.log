2018-05-20  01:07:48.921 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@61e94def: startup date [Sun May 20 01:07:48 CST 2018]; root of context hierarchy
2018-05-20  01:07:49.335 [main] INFO  o.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-20  01:07:49.412 [main] INFO  o.s.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$42225d53] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-20  01:07:49.631 [main] INFO  com.panda.demo.SpringBootDemoApplication - No active profile set, falling back to default profiles: default
2018-05-20  01:07:49.657 [main] INFO  o.s.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32fdec40: startup date [Sun May 20 01:07:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@61e94def
2018-05-20  01:07:50.407 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [beanRefContext.xml]
2018-05-20  01:07:50.684 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Generic.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2018-05-20  01:07:50.771 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-05-20  01:07:51.094 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2018-05-20  01:07:51.278 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=bb78d5a2-7671-36a2-9c9c-857f90457643
2018-05-20  01:07:51.316 [main] INFO  o.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-20  01:07:51.458 [main] INFO  o.s.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$26085a56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-20  01:07:51.509 [main] INFO  o.s.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$42225d53] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-20  01:07:51.994 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2018-05-20  01:07:52.015 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2018-05-20  01:07:52.030 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2018-05-20  01:07:52.031 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-05-20  01:07:52.038 [localhost-startStop-1] INFO  org.apache.catalina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/mosl/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
2018-05-20  01:07:52.187 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2018-05-20  01:07:52.187 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2530 ms
2018-05-20  01:07:52.373 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2018-05-20  01:07:52.381 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-05-20  01:07:53.281 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/test]}" onto public java.lang.Object com.panda.demo.controller.OrderController.test()
2018-05-20  01:07:53.282 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/getUser],methods=[GET]}" onto public java.lang.Object com.panda.demo.controller.OrderController.getUser()
2018-05-20  01:07:53.282 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/selectById]}" onto public java.lang.Object com.panda.demo.controller.OrderController.selectById()
2018-05-20  01:07:53.283 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/insertUser]}" onto public java.lang.Object com.panda.demo.controller.OrderController.insertUser()
2018-05-20  01:07:53.283 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/v1/redis/set],methods=[GET]}" onto public java.lang.Object com.panda.demo.controller.UserController.redisSet()
2018-05-20  01:07:53.285 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/v1/user/add],methods=[POST]}" onto public java.lang.Object com.panda.demo.controller.UserController.addUser(com.panda.demo.dto.UserDto)
2018-05-20  01:07:53.289 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-05-20  01:07:53.290 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-05-20  01:07:53.409 [main] INFO  o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32fdec40: startup date [Sun May 20 01:07:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@61e94def
2018-05-20  01:07:53.561 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-05-20  01:07:53.562 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-05-20  01:07:53.575 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2018-05-20  01:07:53.577 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-05-20  01:07:54.065 [main] WARN  org.springframework.data.convert.CustomConversions - Registering converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
2018-05-20  01:07:54.083 [main] WARN  org.springframework.data.convert.CustomConversions - Registering converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
2018-05-20  01:07:54.098 [main] WARN  org.springframework.data.convert.CustomConversions - Registering converter from class org.joda.time.LocalDateTime to class java.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might wanna check you annotation setup at the converter implementation.
2018-05-20  01:07:55.068 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2018-05-20  01:07:55.070 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
2018-05-20  01:07:55.080 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-05-20  01:07:55.082 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-05-20  01:07:55.082 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-05-20  01:07:55.086 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-05-20  01:07:55.103 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-05-20  01:07:55.116 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=32fdec40,type=ConfigurationPropertiesRebinder]
2018-05-20  01:07:55.123 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2018-05-20  01:07:55.128 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor - Starting beans in phase 0
2018-05-20  01:07:55.139 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2018-05-20  01:07:55.212 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2018-05-20  01:07:55.686 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2018-05-20  01:07:55.686 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2018-05-20  01:07:55.972 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2018-05-20  01:07:55.972 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2018-05-20  01:07:56.307 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2018-05-20  01:07:56.339 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2018-05-20  01:07:56.340 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2018-05-20  01:07:56.340 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2018-05-20  01:07:56.340 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2018-05-20  01:07:56.340 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2018-05-20  01:07:56.340 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2018-05-20  01:07:56.340 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2018-05-20  01:07:56.716 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2018-05-20  01:07:56.720 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2018-05-20  01:07:56.724 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-05-20  01:07:56.730 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1526749676728 with initial instances count: 2
2018-05-20  01:07:56.736 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application spring-boot-demo with eureka with status UP
2018-05-20  01:07:56.737 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1526749676737, current=UP, previous=STARTING]
2018-05-20  01:07:56.739 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-BOOT-DEMO/192.168.0.107:8081: registering service...
2018-05-20  01:07:56.763 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2018-05-20  01:07:56.795 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2018-05-20  01:07:56.806 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-BOOT-DEMO/192.168.0.107:8081 - registration status: 204
2018-05-20  01:07:56.818 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2018-05-20  01:07:56.819 [main] INFO  o.s.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8081
2018-05-20  01:07:56.822 [main] INFO  com.panda.demo.SpringBootDemoApplication - Started SpringBootDemoApplication in 9.509 seconds (JVM running for 12.322)
2018-05-20  01:08:08.817 [Thread-25] WARN  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1526749688817, current=DOWN, previous=UP]
2018-05-20  01:08:08.822 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-BOOT-DEMO/192.168.0.107:8081: registering service...
2018-05-20  01:08:08.829 [Thread-25] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2018-05-20  01:08:08.846 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-BOOT-DEMO/192.168.0.107:8081 - registration status: 204
2018-05-20  01:08:08.847 [Thread-25] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2018-05-20  01:08:08.862 [Thread-25] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-BOOT-DEMO/192.168.0.107:8081 - deregister  status: 200
2018-05-20  01:08:08.872 [Thread-25] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
